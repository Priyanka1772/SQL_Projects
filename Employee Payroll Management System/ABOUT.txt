üí∞ Employee Payroll Management System (SQL Project)
* This repository contains the SQL scripts for a basic Employee Payroll Management System database.
* The project demonstrates fundamental SQL concepts including database creation, table design with relationships, CRUD (Create, Read, Update, Delete) operations, and various queries for data retrieval and payroll reporting.

‚ú® Features
* Database Schema: Designed with Departments, Employees, and Salaries tables.
* CRUD Operations: Examples for inserting, selecting, updating, and deleting records in each table.
* Relationship Management: Utilizes PRIMARY KEY and FOREIGN KEY constraints to maintain data integrity.
* Payroll Calculation: Queries to calculate net pay, including bonuses and deductions.
* Reporting: Examples for generating payroll reports per employee and per department.

üõ†Ô∏è Technologies Used
* MySQL: Relational Database Management System.
* MySQL Workbench: Used for database interaction and query execution.

üöÄ Getting Started
* Follow these steps to set up and run the project on your local machine using MySQL Workbench.
* Prerequisites:
  - MySQL Server installed.
  - MySQL Workbench installed.
* Setup Instructions
  - Clone the Repository.
  - Open MySQL Workbench.
  - Connect to your MySQL server instance.
  - Create the Database.
  - Create Tables.
  - Insert Sample Data.git clone 

üìä Database Schema
* The database consists of three main tables:
* Departments: Stores information about company departments. [Dept_ID (PK), Dept_Name (Unique)]
* Employees: Stores details about employees. [Employee_ID (PK), First_Name, Last_Name, Email (Unique), Phone_No, Hire_Date, Job_Title, Dept_ID (FK to Departments)]
* Salaries: Records salary payments for employees, including bonuses and deductions. [Salary_ID (PK), Employee_ID (FK to Employees), Base_Salary, Bonus, Deductions, Pay_Date]

üîç Key Queries (Payroll Reports)
* Here are some important queries demonstrated in this project that showcase core functionalities:

1. Calculate Net Pay for a Specific Period
Retrieves detailed payroll information for all employees paid on a specific date, including their net pay.

SELECT
    E.employee_id,
    E.first_name,
    E.last_name,
    E.job_title,
    D.department_name,
    S.base_salary,
    S.bonus,
    S.deductions,
    (S.base_salary + S.bonus - S.deductions) AS net_pay,
    S.pay_date
FROM Salaries AS S
INNER JOIN Employees AS E ON S.employee_id = E.employee_id
INNER JOIN Departments AS D ON E.department_id = D.department_id
WHERE S.pay_date = '2024-07-20'; -- Change pay date as needed

2. Total Payroll per Department for a Month
Calculates the sum of net pay for all employees within each department for a given month.

SELECT
    D.department_name,
    SUM(S.base_salary + S.bonus - S.deductions) AS TotalDepartmentPayroll
FROM Salaries AS S
INNER JOIN Employees AS E ON S.employee_id = E.employee_id
INNER JOIN Departments AS D ON E.department_id = D.department_id
WHERE S.pay_date BETWEEN '2024-07-01' AND '2024-07-31' -- Adjust date range for the month
GROUP BY D.department_name
ORDER BY D.department_name;

3. Employees Without Recent Salary Record
Identifies employees who have not yet received a salary record for a specific pay date.

SELECT
    E.employee_id,
    E.first_name,
    E.last_name,
    E.hire_date,
    D.department_name
FROM Employees AS E
LEFT JOIN Salaries AS S ON E.employee_id = S.employee_id
AND S.pay_date = '2024-08-20' -- Check for a specific pay date
INNER JOIN Departments AS D ON E.department_id = D.department_id
WHERE S.salary_id IS NULL;

## Contributing
* Feel free to fork this repository, make improvements, or add new features! Pull requests are welcome.

## License
* This project is open-sourced under the MIT License.

## Author
* www.linkedin.com/in/priyanka-s-kumar-1580b0218
